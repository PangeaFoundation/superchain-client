{"version":3,"sources":["index.ts"],"sourcesContent":["import { v4 as uuidv4, NIL as uuidNil } from 'uuid';\nimport { Buffer } from 'buffer';\nimport { WebSocket, RawData } from 'ws';\n\nexport interface ClientOptions {\n  endpoint?: string;\n  username?: string;\n  password?: string;\n  isSecure?: boolean;\n}\n\nfunction applyDefaults(options: ClientOptions): ClientOptions {\n  return {\n    endpoint: options.endpoint || 'app.superchain.network',\n    username: options.username,\n    password: options.password,\n    isSecure: options.isSecure === undefined ? true : options.isSecure,\n  };\n}\n\nexport class Client {\n  endpoint: string;\n  connection: WebSocket;\n  subscriptions: Map<string, { request: any, cursor: string | null }>;\n\n  constructor(options: ClientOptions) {\n    options = applyDefaults(options);\n\n    let endpoint = options.endpoint;\n    if (options.username && options.password) {\n      endpoint = `${options.username}:${options.password}@${endpoint}`;\n    }\n    this.endpoint = options.isSecure\n      ? `wss://${endpoint}/v1/websocket`\n      : `ws://${endpoint}/v1/websocket`;\n\n    this.subscriptions = new Map();\n    this.connection = new WebSocket(this.endpoint);\n    this.connect();\n  }\n\n  async connect() {\n\n    try {\n      if (!this.connection || this.connection.readyState === WebSocket.CLOSED) {\n        this.connection = new WebSocket(this.endpoint);\n      }\n\n      await this.waitForConnection();\n    } catch (error) {\n      console.error('WebSocket connection error:', error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    if (this.connection) {\n      this.connection?.close();\n    }\n  }\n\n  async send_request(operation: string, params = {}, options = {}) {\n    await this.ensureConnection(); // Ensure connection before sending\n    const id = uuidv4();\n\n    const request = {\n      id,\n      cursor: null as string | null | undefined,\n      operation,\n      ...options,\n      ...params,\n    };\n\n    // Add cursor if present\n    if (this.subscriptions.has(id)) {\n      request.cursor = this.subscriptions.get(id)?.cursor;\n    } else {\n      this.subscriptions.set(id, { request, cursor: null }); // Initialize subscription state with null cursor\n    }\n\n    this.connection?.send(JSON.stringify(request));\n    return this.handle_request(id);\n  }\n\n  async *handle_request(id: string) {\n    const queue: { header: Header; body: Buffer }[] = [];\n\n    // Register a message event listener\n    this.connection?.on('message', async (raw_data: RawData) => {\n      if (!raw_data) {\n        return;\n      }\n\n      let data: Buffer = Buffer.from([]);\n      if (raw_data instanceof ArrayBuffer) {\n        data = Buffer.from(raw_data);\n      } else if (raw_data instanceof Buffer) {\n        data = raw_data;\n      } else if (typeof raw_data === 'string') {\n        data = Buffer.from(raw_data);\n      } else if (Array.isArray(raw_data)) {\n        data = Buffer.concat(raw_data);\n      } else if (data instanceof Blob) {\n        let buffer = await data.arrayBuffer();\n        data = Buffer.from(buffer);\n      }\n\n      const newlineIndex = data.indexOf('\\n');\n      if (newlineIndex === -1) {\n        return;\n      }\n\n      const headerJSON = data.subarray(0, newlineIndex).toString();\n      const body = data.subarray(newlineIndex + 1); // Preserving the body as bytes\n\n      const header = JSON.parse(headerJSON);\n\n      if (header.id === uuidNil && header.kind === 'Error') {\n        throw new Error(body.toString());\n      }\n\n      if (header.id !== id) return;\n\n      queue.push({ header, body });\n    });\n\n    while (true) {\n      if (queue.length === 0) {\n        await new Promise((resolve) => setTimeout(resolve, 50));\n        continue;\n      }\n\n      const item = queue.shift();\n      if (!item) {\n        continue;\n      }\n\n      const { header, body } = item;\n\n      if (header?.kind && header.kind.startsWith('Continue') && item.header.cursor && this.subscriptions.get(id)) {\n        this.subscriptions.get(id)!.cursor = item.header.cursor;\n      }\n\n      if (header.kind === 'Start') {\n        continue;\n      } else if (\n        ['Continue', 'ContinueWithError'].includes(header.kind as string)\n      ) {\n        yield body;\n      } else if (header.kind === 'Error') {\n        throw new Error(body.toString());\n      } else if (header.kind === 'End') {\n        break;\n      } else {\n        throw new Error(\n          `Unexpected kind of response from server: ${header.kind}`\n        );\n      }\n    }\n  }\n\n  async ensureConnection() {\n    while (this.connection && this.connection.readyState === WebSocket.CONNECTING) {\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    if (this.connection && this.connection.readyState === WebSocket.OPEN) {\n      return;\n    }\n\n    console.log('Connection lost. Attempting to reconnect...');\n    try {\n      await this.connect();\n    } catch (error) {\n      // Trigger reconnection attempt\n      await this.reconnect_with_backoff();\n    }\n  }\n\n  async reconnect_with_backoff() {\n    let backoffSeconds = 1;\n    const MAX_BACKOFF_SECONDS = 60;\n\n    while (true) {\n      try {\n        await this.connect();\n        // Resubscribe after successful connection\n        for (const [id, subscription] of this.subscriptions.entries()) {\n          await this.send_request(subscription.request.operation, subscription.request, { deltas: subscription.request.deltas, format: subscription.request.format });\n        }\n        backoffSeconds = 1; // Reset backoff on successful reconnection\n        return;\n      } catch (error) {\n        console.error(`Reconnection failed: ${error}. Retrying in ${backoffSeconds} seconds...`);\n        await new Promise(resolve => setTimeout(resolve, backoffSeconds * 1000));\n        backoffSeconds = Math.min(backoffSeconds * 2, MAX_BACKOFF_SECONDS);\n      }\n    }\n  }\n\n  async waitForConnection(timeout: number = 5000) {\n    return new Promise<void>((resolve, reject) => {\n      if (this.connection?.readyState === WebSocket.OPEN) {\n        resolve();\n        return;\n      }\n\n      const onOpen = () => {\n        clearTimeout(timeoutId);\n        resolve();\n        this.connection?.removeEventListener('open', onOpen);\n      };\n\n      const onError = (error: any) => {\n        console.log('WebSocket connection error:', error);\n        clearTimeout(timeoutId);\n        reject(error);\n        this.connection?.removeEventListener('error', onError);\n      };\n\n      const timeoutId = setTimeout(() => {\n        reject(new Error('WebSocket connection timed out'));\n        this.connection?.removeEventListener('open', onOpen);\n        this.connection?.removeEventListener('error', onError);\n      }, timeout);\n\n      this.connection?.addEventListener('open', onOpen);\n      this.connection?.addEventListener('error', onError);\n    });\n  }\n\n  async get_status(format = 'json_stream') {\n    return await this.send_request('getStatus', { format });\n  }\n\n  async get_blocks(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getBlocks', params, { deltas, format });\n  }\n\n  async get_logs(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getLogs', params, { deltas, format });\n  }\n\n  async get_transactions(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getTxs', params, { deltas, format });\n  }\n\n  async get_receipts(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getReceipts', params, { deltas, format });\n  }\n\n  async get_contracts(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getContracts', params, { deltas, format });\n  }\n\n  async get_uniswap_v2_pairs(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUniswapV2Pairs', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_uniswap_v2_prices(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUniswapV2Prices', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_uniswap_v3_pools(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUniswapV3Pools', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_uniswap_v3_fees(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUniswapV3Fees', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_uniswap_v3_positions(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUniswapV3Positions', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_uniswap_v3_prices(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUniswapV3Prices', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_curve_tokens(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getCurveTokens', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_curve_pools(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getCurvePools', params, { deltas, format });\n  }\n\n  async get_curve_prices(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getCurvePrices', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_transfers(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getTransfers', params, { deltas, format });\n  }\n\n  async get_erc20_tokens(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getErc20', params, { deltas, format });\n  }\n\n  async get_erc20_approvals(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getErc20Approvals', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_erc20_transfers(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getErc20Transfers', params, {\n      deltas,\n      format,\n    });\n  }\n\n  async get_fuel_spark_orders(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getSparkOrder', params, { deltas, format });\n  }\n\n  async get_fuel_unspent_utxos(params: Object, deltas = false, format = 'json_stream') {\n    return await this.send_request('getUnspentUtxos', params, { deltas, format });\n  }\n}\n\ninterface Header {\n  id: string;\n  kind: string;\n  cursor?: string;\n}\n"],"names":["Client","applyDefaults","options","endpoint","username","password","isSecure","undefined","connect","connection","readyState","WebSocket","CLOSED","waitForConnection","error","console","disconnect","close","send_request","operation","params","ensureConnection","id","uuidv4","request","cursor","subscriptions","has","get","set","send","JSON","stringify","handle_request","queue","on","raw_data","data","Buffer","from","ArrayBuffer","Array","isArray","concat","Blob","buffer","arrayBuffer","newlineIndex","indexOf","headerJSON","subarray","toString","body","header","parse","uuidNil","kind","Error","push","length","Promise","resolve","setTimeout","item","shift","startsWith","includes","CONNECTING","OPEN","log","reconnect_with_backoff","backoffSeconds","MAX_BACKOFF_SECONDS","subscription","entries","deltas","format","Math","min","timeout","reject","onOpen","clearTimeout","timeoutId","removeEventListener","onError","addEventListener","get_status","get_blocks","get_logs","get_transactions","get_receipts","get_contracts","get_uniswap_v2_pairs","get_uniswap_v2_prices","get_uniswap_v3_pools","get_uniswap_v3_fees","get_uniswap_v3_positions","get_uniswap_v3_prices","get_curve_tokens","get_curve_pools","get_curve_prices","get_transfers","get_erc20_tokens","get_erc20_approvals","get_erc20_transfers","get_fuel_spark_orders","get_fuel_unspent_utxos","constructor","Map"],"mappings":"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"}