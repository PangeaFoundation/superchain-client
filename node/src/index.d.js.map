{"version":3,"sources":["index.d.ts"],"sourcesContent":["/// <reference types=\"node\" />\nimport { Buffer } from 'buffer';\nimport { WebSocket } from 'ws';\nexport interface ClientOptions {\n    endpoint?: string;\n    username?: string;\n    password?: string;\n    isSecure?: boolean;\n}\nexport declare class Client {\n    endpoint: string;\n    connection: WebSocket;\n    subscriptions: Map<string, {\n        request: any;\n        cursor: string | null;\n    }>;\n    constructor(options: ClientOptions);\n    connect(): Promise<void>;\n    disconnect(): Promise<void>;\n    send_request(operation: string, params?: {}, options?: {}): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    handle_request(id: string): AsyncGenerator<Buffer, void, unknown>;\n    ensureConnection(): Promise<void>;\n    reconnect_with_backoff(): Promise<void>;\n    waitForConnection(timeout?: number): Promise<void>;\n    get_status(format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_blocks(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_logs(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_transactions(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_receipts(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_contracts(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_uniswap_v2_pairs(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_uniswap_v2_prices(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_uniswap_v3_pools(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_uniswap_v3_fees(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_uniswap_v3_positions(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_uniswap_v3_prices(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_curve_tokens(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_curve_pools(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_curve_prices(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_transfers(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_erc20_tokens(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_erc20_approvals(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_erc20_transfers(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_fuel_spark_orders(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n    get_fuel_unspent_utxos(params: Object, deltas?: boolean, format?: string): Promise<AsyncGenerator<Buffer, void, unknown>>;\n}\n"],"names":[],"mappings":"AAAA,8BAA8B"}